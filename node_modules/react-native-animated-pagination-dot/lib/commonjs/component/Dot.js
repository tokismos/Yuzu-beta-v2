"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _reactNative = require("react-native");

var _usePrevious = _interopRequireDefault(require("react-use/lib/usePrevious"));

var _EmptyDot = _interopRequireDefault(require("./EmptyDot"));

var _DotUtils = require("../util/DotUtils");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/**
 *
 * Created by rouge on 11/09/2019.
 * Converted to Typescript on 14/07/2020.
 * Converted to Functional component. on 21/09/2021
 */
const Dot = props => {
  const [animVal] = (0, _react.useState)(new _reactNative.Animated.Value(0));
  const [animate, setAnimate] = (0, _react.useState)(false);
  const [type, setType] = (0, _react.useState)(() => (0, _DotUtils.getDotStyle)({
    idx: props.idx,
    curPage: props.curPage,
    maxPage: props.maxPage
  }));
  const prevType = (0, _usePrevious.default)(type);
  (0, _react.useEffect)(() => {
    const nextType = (0, _DotUtils.getDotStyle)({
      idx: props.idx,
      curPage: props.curPage,
      maxPage: props.maxPage
    });
    const nextAnimate = nextType.size !== ((prevType === null || prevType === void 0 ? void 0 : prevType.size) || 3) || nextType.opacity !== ((prevType === null || prevType === void 0 ? void 0 : prevType.opacity) || 0.2);
    setType(nextType);
    setAnimate(nextAnimate);
  }, [prevType === null || prevType === void 0 ? void 0 : prevType.opacity, prevType === null || prevType === void 0 ? void 0 : prevType.size, props.curPage, props.idx, props.maxPage]);
  (0, _react.useEffect)(() => {
    if (!animate) return;
    animVal.setValue(0);

    _reactNative.Animated.timing(animVal, {
      toValue: 1,
      duration: 300,
      useNativeDriver: false
    }).start();
  }, [animVal, animate, prevType, type]);
  const animStyle = (0, _react.useMemo)(() => {
    const size = animVal.interpolate({
      inputRange: [0, 1],
      outputRange: [((prevType === null || prevType === void 0 ? void 0 : prevType.size) || 3) * props.sizeRatio, type.size * props.sizeRatio]
    });
    return {
      width: size,
      height: size,
      borderRadius: animVal.interpolate({
        inputRange: [0, 1],
        outputRange: [((prevType === null || prevType === void 0 ? void 0 : prevType.size) || 3) * props.sizeRatio * 0.5, type.size * props.sizeRatio * 0.5]
      }),
      opacity: animVal.interpolate({
        inputRange: [0, 1],
        outputRange: [(prevType === null || prevType === void 0 ? void 0 : prevType.opacity) || 0.2, type.opacity]
      })
    };
  }, [animVal, prevType === null || prevType === void 0 ? void 0 : prevType.opacity, prevType === null || prevType === void 0 ? void 0 : prevType.size, props.sizeRatio, type.opacity, type.size]);

  if (props.curPage < 3) {
    if (props.idx >= 5) return /*#__PURE__*/_react.default.createElement(_EmptyDot.default, {
      sizeRatio: props.sizeRatio
    });
  } else if (props.curPage < 4) {
    if (props.idx > 5) return /*#__PURE__*/_react.default.createElement(_EmptyDot.default, {
      sizeRatio: props.sizeRatio
    });
  }

  return /*#__PURE__*/_react.default.createElement(_reactNative.Animated.View, {
    style: [{
      backgroundColor: props.activeColor,
      margin: 3 * props.sizeRatio
    }, animStyle]
  });
};

var _default = Dot;
exports.default = _default;
//# sourceMappingURL=Dot.js.map