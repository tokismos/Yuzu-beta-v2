{"version":3,"sources":["Dot.tsx"],"names":["Dot","props","animVal","Animated","Value","animate","setAnimate","type","setType","idx","curPage","maxPage","prevType","nextType","nextAnimate","size","opacity","setValue","timing","toValue","duration","useNativeDriver","start","animStyle","interpolate","inputRange","outputRange","sizeRatio","width","height","borderRadius","backgroundColor","activeColor","margin"],"mappings":";;;;;;;AAMA;;AACA;;AACA;;AACA;;AACA;;;;;;;;AAVA;AACA;AACA;AACA;AACA;AACA;AAOA,MAAMA,GAMJ,GAAIC,KAAD,IAAW;AACd,QAAM,CAACC,OAAD,IAAY,qBAAS,IAAIC,sBAASC,KAAb,CAAmB,CAAnB,CAAT,CAAlB;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwB,qBAAS,KAAT,CAA9B;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkB,qBAAS,MAC/B,2BAAY;AACVC,IAAAA,GAAG,EAAER,KAAK,CAACQ,GADD;AAEVC,IAAAA,OAAO,EAAET,KAAK,CAACS,OAFL;AAGVC,IAAAA,OAAO,EAAEV,KAAK,CAACU;AAHL,GAAZ,CADsB,CAAxB;AAOA,QAAMC,QAAQ,GAAG,0BAAYL,IAAZ,CAAjB;AAEA,wBAAU,MAAM;AACd,UAAMM,QAAQ,GAAG,2BAAY;AAC3BJ,MAAAA,GAAG,EAAER,KAAK,CAACQ,GADgB;AAE3BC,MAAAA,OAAO,EAAET,KAAK,CAACS,OAFY;AAG3BC,MAAAA,OAAO,EAAEV,KAAK,CAACU;AAHY,KAAZ,CAAjB;AAMA,UAAMG,WAAW,GACfD,QAAQ,CAACE,IAAT,MAAmB,CAAAH,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEG,IAAV,KAAkB,CAArC,KACAF,QAAQ,CAACG,OAAT,MAAsB,CAAAJ,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEI,OAAV,KAAqB,GAA3C,CAFF;AAIAR,IAAAA,OAAO,CAACK,QAAD,CAAP;AACAP,IAAAA,UAAU,CAACQ,WAAD,CAAV;AACD,GAbD,EAaG,CACDF,QADC,aACDA,QADC,uBACDA,QAAQ,CAAEI,OADT,EAEDJ,QAFC,aAEDA,QAFC,uBAEDA,QAAQ,CAAEG,IAFT,EAGDd,KAAK,CAACS,OAHL,EAIDT,KAAK,CAACQ,GAJL,EAKDR,KAAK,CAACU,OALL,CAbH;AAqBA,wBAAU,MAAM;AACd,QAAI,CAACN,OAAL,EAAc;AAEdH,IAAAA,OAAO,CAACe,QAAR,CAAiB,CAAjB;;AACAd,0BAASe,MAAT,CAAgBhB,OAAhB,EAAyB;AACvBiB,MAAAA,OAAO,EAAE,CADc;AAEvBC,MAAAA,QAAQ,EAAE,GAFa;AAGvBC,MAAAA,eAAe,EAAE;AAHM,KAAzB,EAIGC,KAJH;AAKD,GATD,EASG,CAACpB,OAAD,EAAUG,OAAV,EAAmBO,QAAnB,EAA6BL,IAA7B,CATH;AAWA,QAAMgB,SAAS,GAAG,oBAAQ,MAAM;AAC9B,UAAMR,IAAI,GAAGb,OAAO,CAACsB,WAAR,CAAoB;AAC/BC,MAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CADmB;AAE/BC,MAAAA,WAAW,EAAE,CACX,CAAC,CAAAd,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEG,IAAV,KAAkB,CAAnB,IAAwBd,KAAK,CAAC0B,SADnB,EAEXpB,IAAI,CAACQ,IAAL,GAAYd,KAAK,CAAC0B,SAFP;AAFkB,KAApB,CAAb;AAOA,WAAO;AACLC,MAAAA,KAAK,EAAEb,IADF;AAELc,MAAAA,MAAM,EAAEd,IAFH;AAGLe,MAAAA,YAAY,EAAE5B,OAAO,CAACsB,WAAR,CAAoB;AAChCC,QAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CADoB;AAEhCC,QAAAA,WAAW,EAAE,CACX,CAAC,CAAAd,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEG,IAAV,KAAkB,CAAnB,IAAwBd,KAAK,CAAC0B,SAA9B,GAA0C,GAD/B,EAEXpB,IAAI,CAACQ,IAAL,GAAYd,KAAK,CAAC0B,SAAlB,GAA8B,GAFnB;AAFmB,OAApB,CAHT;AAULX,MAAAA,OAAO,EAAEd,OAAO,CAACsB,WAAR,CAAoB;AAC3BC,QAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CADe;AAE3BC,QAAAA,WAAW,EAAE,CAAC,CAAAd,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEI,OAAV,KAAqB,GAAtB,EAA2BT,IAAI,CAACS,OAAhC;AAFc,OAApB;AAVJ,KAAP;AAeD,GAvBiB,EAuBf,CACDd,OADC,EAEDU,QAFC,aAEDA,QAFC,uBAEDA,QAAQ,CAAEI,OAFT,EAGDJ,QAHC,aAGDA,QAHC,uBAGDA,QAAQ,CAAEG,IAHT,EAIDd,KAAK,CAAC0B,SAJL,EAKDpB,IAAI,CAACS,OALJ,EAMDT,IAAI,CAACQ,IANJ,CAvBe,CAAlB;;AAgCA,MAAId,KAAK,CAACS,OAAN,GAAgB,CAApB,EAAuB;AACrB,QAAIT,KAAK,CAACQ,GAAN,IAAa,CAAjB,EAAoB,oBAAO,6BAAC,iBAAD;AAAU,MAAA,SAAS,EAAER,KAAK,CAAC0B;AAA3B,MAAP;AACrB,GAFD,MAEO,IAAI1B,KAAK,CAACS,OAAN,GAAgB,CAApB,EAAuB;AAC5B,QAAIT,KAAK,CAACQ,GAAN,GAAY,CAAhB,EAAmB,oBAAO,6BAAC,iBAAD;AAAU,MAAA,SAAS,EAAER,KAAK,CAAC0B;AAA3B,MAAP;AACpB;;AAED,sBACE,6BAAC,qBAAD,CAAU,IAAV;AACE,IAAA,KAAK,EAAE,CACL;AACEI,MAAAA,eAAe,EAAE9B,KAAK,CAAC+B,WADzB;AAEEC,MAAAA,MAAM,EAAE,IAAIhC,KAAK,CAAC0B;AAFpB,KADK,EAKLJ,SALK;AADT,IADF;AAWD,CAnGD;;eAqGevB,G","sourcesContent":["/**\n *\n * Created by rouge on 11/09/2019.\n * Converted to Typescript on 14/07/2020.\n * Converted to Functional component. on 21/09/2021\n */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { Animated } from 'react-native';\nimport usePrevious from 'react-use/lib/usePrevious';\nimport EmptyDot from './EmptyDot';\nimport { getDotStyle } from '../util/DotUtils';\n\nconst Dot: React.FC<{\n  idx: number;\n  curPage: number;\n  maxPage: number;\n  activeColor: string;\n  sizeRatio: number;\n}> = (props) => {\n  const [animVal] = useState(new Animated.Value(0));\n  const [animate, setAnimate] = useState(false);\n  const [type, setType] = useState(() =>\n    getDotStyle({\n      idx: props.idx,\n      curPage: props.curPage,\n      maxPage: props.maxPage,\n    })\n  );\n  const prevType = usePrevious(type);\n\n  useEffect(() => {\n    const nextType = getDotStyle({\n      idx: props.idx,\n      curPage: props.curPage,\n      maxPage: props.maxPage,\n    });\n\n    const nextAnimate =\n      nextType.size !== (prevType?.size || 3) ||\n      nextType.opacity !== (prevType?.opacity || 0.2);\n\n    setType(nextType);\n    setAnimate(nextAnimate);\n  }, [\n    prevType?.opacity,\n    prevType?.size,\n    props.curPage,\n    props.idx,\n    props.maxPage,\n  ]);\n\n  useEffect(() => {\n    if (!animate) return;\n\n    animVal.setValue(0);\n    Animated.timing(animVal, {\n      toValue: 1,\n      duration: 300,\n      useNativeDriver: false,\n    }).start();\n  }, [animVal, animate, prevType, type]);\n\n  const animStyle = useMemo(() => {\n    const size = animVal.interpolate({\n      inputRange: [0, 1],\n      outputRange: [\n        (prevType?.size || 3) * props.sizeRatio,\n        type.size * props.sizeRatio,\n      ],\n    });\n    return {\n      width: size,\n      height: size,\n      borderRadius: animVal.interpolate({\n        inputRange: [0, 1],\n        outputRange: [\n          (prevType?.size || 3) * props.sizeRatio * 0.5,\n          type.size * props.sizeRatio * 0.5,\n        ],\n      }),\n      opacity: animVal.interpolate({\n        inputRange: [0, 1],\n        outputRange: [prevType?.opacity || 0.2, type.opacity],\n      }),\n    };\n  }, [\n    animVal,\n    prevType?.opacity,\n    prevType?.size,\n    props.sizeRatio,\n    type.opacity,\n    type.size,\n  ]);\n\n  if (props.curPage < 3) {\n    if (props.idx >= 5) return <EmptyDot sizeRatio={props.sizeRatio} />;\n  } else if (props.curPage < 4) {\n    if (props.idx > 5) return <EmptyDot sizeRatio={props.sizeRatio} />;\n  }\n\n  return (\n    <Animated.View\n      style={[\n        {\n          backgroundColor: props.activeColor,\n          margin: 3 * props.sizeRatio,\n        },\n        animStyle,\n      ]}\n    />\n  );\n};\n\nexport default Dot;\n"]}