{"version":3,"sources":["DotUtils.ts"],"names":["EnumDotType","DotStyle","INACTIVE","size","opacity","ACTIVE","MEDIUM","SMALL","getDotStyle","idx","curPage","maxPage","type"],"mappings":"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","sourcesContent":["type IDotStyle = {\n  size: number;\n  opacity: number;\n};\n\nenum EnumDotType {\n  ACTIVE,\n  INACTIVE,\n  MEDIUM,\n  SMALL,\n}\n\nconst DotStyle = {\n  [EnumDotType.INACTIVE]: {\n    size: 8,\n    opacity: 0.2,\n  },\n  [EnumDotType.ACTIVE]: {\n    size: 8,\n    opacity: 1.0,\n  },\n  [EnumDotType.MEDIUM]: {\n    size: 5,\n    opacity: 0.2,\n  },\n  [EnumDotType.SMALL]: {\n    size: 3,\n    opacity: 0.2,\n  },\n};\n\nexport type getDotStylePayload = {\n  idx: number;\n  curPage: number;\n  maxPage: number;\n};\n\nexport const getDotStyle = ({\n  idx,\n  curPage,\n  maxPage,\n}: getDotStylePayload): IDotStyle => {\n  let type = EnumDotType.SMALL;\n\n  if (maxPage < 5) {\n    //5개 이하인 경우는 단수이기 때문에 큰 Dot으로만 구성\n    // return ( idx === curPage ) ? EnumDotType.ACTIVE : EnumDotType.INACTIVE;\n    return DotStyle[\n      idx === curPage ? EnumDotType.ACTIVE : EnumDotType.INACTIVE\n    ];\n  }\n\n  if (curPage < 3) {\n    // 현재 페이지가 3 이하일때는 별도로 배열을 지정해줌\n    // 배열\n    // 큰 큰 큰 중\n    if (idx < 3) {\n      type = EnumDotType.INACTIVE;\n      if (curPage === idx) {\n        type = EnumDotType.ACTIVE;\n      }\n    } else if (idx < 4) {\n      type = EnumDotType.MEDIUM;\n    } else {\n      type = EnumDotType.SMALL;\n    }\n  } else if (curPage === 3) {\n    //4번째 페이지 일때 배열은 별도로 지정해줌\n    // 배열\n    // 중 큰 큰 큰 중\n    if (idx < 4) {\n      if (idx === 0) {\n        type = EnumDotType.MEDIUM;\n      } else {\n        type = EnumDotType.INACTIVE;\n\n        if (curPage === idx) {\n          type = EnumDotType.ACTIVE;\n        }\n      }\n    } else if (curPage + 1 === idx) {\n      type = EnumDotType.MEDIUM;\n    } else {\n      type = EnumDotType.SMALL;\n    }\n  } else {\n    //기타는 모두 동일한 로직으로 돌아가도록\n    if (idx > curPage) {\n      if (idx === curPage + 1) {\n        type = EnumDotType.MEDIUM;\n      }\n    } else if (idx < curPage) {\n      if (idx >= curPage - 2) {\n        type = EnumDotType.INACTIVE;\n      } else if (idx === curPage - 3) {\n        type = EnumDotType.MEDIUM;\n      }\n    } else {\n      type = EnumDotType.ACTIVE;\n    }\n  }\n\n  return DotStyle[type];\n};\n"]}